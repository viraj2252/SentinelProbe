name: Publish Wiki

on:
  push:
    branches:
      - main
    paths:
      - "docs/wiki/**"
      - "mkdocs.yml"

jobs:
  publish-wiki:
    name: Publish Wiki to GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs==1.4.2 mkdocs-material==9.1.5 pymdown-extensions==9.9.2
          # Install pandoc for HTML to Markdown conversion
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Create minimal MkDocs configuration for wiki build
        run: |
          # Create a simplified mkdocs.yml file for wiki building
          cat > mkdocs.wiki.yml << 'EOF'
          site_name: SentinelProbe Documentation
          site_description: Documentation for the SentinelProbe AI-powered penetration testing system
          site_author: SentinelProbe Team
          repo_url: https://github.com/viraj2252/sentinelprobe
          repo_name: sentinelprobe

          theme:
            name: material
            features:
              - navigation.tabs
              - search.highlight

          markdown_extensions:
            - admonition
            - pymdownx.details
            - pymdownx.superfences
            - pymdownx.highlight
            - pymdownx.inlinehilite
            - pymdownx.tabbed
            - pymdownx.tasklist:
                custom_checkbox: true
            - def_list
            - meta
            - toc:
                permalink: true

          plugins:
            - search

          # Only include documentation files that actually exist
          nav:
            - Home: wiki/index.md
            - Getting Started:
                - Installation: wiki/installation.md
                - Quick Start: wiki/quick-start.md
                - System Requirements: wiki/system-requirements.md
                - Architecture Overview: wiki/architecture-overview.md
            - Component Documentation:
                - Reconnaissance Module: wiki/components/reconnaissance.md
                - AI Decision Engine: wiki/components/ai-decision-engine.md
                - Vulnerability Scanner: wiki/components/vulnerability-scanner.md
                - Exploitation Engine: wiki/components/exploitation-engine.md
                - Post-Exploitation Module: wiki/components/post-exploitation.md
                - Reporting Engine: wiki/components/reporting-engine.md
            - Advanced Usage:
                - Custom Rule Development: wiki/advanced/custom-rules.md

          docs_dir: docs
          EOF

      - name: Clone Wiki Repository
        env:
          GH_PAT: ${{ secrets.WIKI_TOKEN }}
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git clone "https://${GH_PAT}@github.com/${{ github.repository }}.wiki.git" wiki

      - name: Generate Wiki Content
        run: |
          # Build documentation with MkDocs using our simplified config
          mkdocs build -f mkdocs.wiki.yml

          # Create a temporary directory for processed files
          mkdir -p temp_wiki

          # Process the site output files for wiki format
          for file in $(find site -name "*.html" -type f); do
            # Get the relative path and filename
            rel_path=${file#site/}
            dir_path=$(dirname "$rel_path")
            base_name=$(basename "$rel_path" .html)

            # Skip index files - they'll become Home.md
            if [[ "$base_name" == "index" ]]; then
              if [[ "$dir_path" == "." ]]; then
                # Root index becomes Home.md
                pandoc -f html -t markdown_github "$file" -o "temp_wiki/Home.md"
              else
                # Other index files become directory name.md
                dir_name=$(basename "$dir_path")
                pandoc -f html -t markdown_github "$file" -o "temp_wiki/${dir_name}.md"
              fi
            else
              # Normal files keep their name
              target_path="temp_wiki/${base_name}.md"
              pandoc -f html -t markdown_github "$file" -o "$target_path"

              # Fix internal links
              sed -i 's/\.html)/)/g' "$target_path"
              sed -i 's/\.html#/#/g' "$target_path"
            fi
          done

          # Copy any images
          mkdir -p temp_wiki/assets
          if [ -d "site/assets" ]; then
            cp -r site/assets/* temp_wiki/assets/
          fi

      - name: Clean Static Assets
        run: |
          # Remove JavaScript and CSS files from being published to the wiki
          rm -rf temp_wiki/assets/javascripts
          rm -rf temp_wiki/assets/stylesheets

      - name: Update Wiki Repository
        env:
          GH_PAT: ${{ secrets.WIKI_TOKEN }}
        run: |
          # Remove old files but keep Home.md if it exists
          if [ -f "wiki/Home.md" ]; then
            mv wiki/Home.md wiki/Home.md.bak
          fi
          rm -rf wiki/*.md
          if [ -f "wiki/Home.md.bak" ]; then
            mv wiki/Home.md.bak wiki/Home.md
          fi
          mkdir -p wiki/assets

          # Copy new files
          cp temp_wiki/*.md wiki/
          cp -r temp_wiki/assets/* wiki/assets/ 2>/dev/null || true

          # Go to wiki repo
          cd wiki

          # Add all changes
          git add .

          # Commit if there are changes
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update wiki from docs - ${GITHUB_SHA}" && git push)
