name: Publish Wiki

on:
  push:
    branches:
      - main
    paths:
      - "docs/wiki/**"
      - "mkdocs.yml"

jobs:
  publish-wiki:
    name: Publish Wiki to GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs==1.4.2 mkdocs-material==9.1.5 pymdown-extensions==9.9.2
          pip install mkdocs-mermaid2-plugin==0.6.0
          # Install pandoc for HTML to Markdown conversion
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Modify MkDocs configuration for wiki build
        run: |
          # Create a temporary copy of mkdocs.yml for wiki building
          cp mkdocs.yml mkdocs.wiki.yml

          # Use sed to comment out the mermaid2 plugin if it's causing issues
          sed -i '/^  - mermaid2:/,/^[a-z]/s/^  - /  #- /' mkdocs.wiki.yml

          # Comment out non-existent files in the nav to avoid warnings
          sed -i 's|      - Configuration: wiki/configuration.md|      #- Configuration: wiki/configuration.md|g' mkdocs.wiki.yml
          sed -i 's|      - Running Your First Scan: wiki/first-scan.md|      #- Running Your First Scan: wiki/first-scan.md|g' mkdocs.wiki.yml
          sed -i 's|      - Understanding Reports: wiki/understanding-reports.md|      #- Understanding Reports: wiki/understanding-reports.md|g' mkdocs.wiki.yml
          sed -i 's|      - Managing Jobs: wiki/managing-jobs.md|      #- Managing Jobs: wiki/managing-jobs.md|g' mkdocs.wiki.yml

          # Comment out other non-existent files
          sed -i 's|      - Plugin Development: wiki/advanced/plugin-development.md|      #- Plugin Development: wiki/advanced/plugin-development.md|g' mkdocs.wiki.yml
          sed -i 's|      - API Reference: wiki/advanced/api-reference.md|      #- API Reference: wiki/advanced/api-reference.md|g' mkdocs.wiki.yml
          sed -i 's|      - Integration Guide: wiki/advanced/integration.md|      #- Integration Guide: wiki/advanced/integration.md|g' mkdocs.wiki.yml

          sed -i 's|      - Development Setup: wiki/contributing/development-setup.md|      #- Development Setup: wiki/contributing/development-setup.md|g' mkdocs.wiki.yml
          sed -i 's|      - Coding Standards: wiki/contributing/coding-standards.md|      #- Coding Standards: wiki/contributing/coding-standards.md|g' mkdocs.wiki.yml
          sed -i 's|      - Testing Guidelines: wiki/contributing/testing.md|      #- Testing Guidelines: wiki/contributing/testing.md|g' mkdocs.wiki.yml
          sed -i 's|      - Pull Request Process: wiki/contributing/pull-requests.md|      #- Pull Request Process: wiki/contributing/pull-requests.md|g' mkdocs.wiki.yml

      - name: Clone Wiki Repository
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git clone "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git" wiki

      - name: Generate Wiki Content
        run: |
          # Build documentation with MkDocs using our modified config
          mkdocs build -f mkdocs.wiki.yml

          # Create a temporary directory for processed files
          mkdir -p temp_wiki

          # Process the site output files for wiki format
          for file in $(find site -name "*.html" -type f); do
            # Get the relative path and filename
            rel_path=${file#site/}
            dir_path=$(dirname "$rel_path")
            base_name=$(basename "$rel_path" .html)

            # Skip index files - they'll become Home.md
            if [[ "$base_name" == "index" ]]; then
              if [[ "$dir_path" == "." ]]; then
                # Root index becomes Home.md
                pandoc -f html -t markdown_github "$file" -o "temp_wiki/Home.md"
              else
                # Other index files become directory name.md
                dir_name=$(basename "$dir_path")
                pandoc -f html -t markdown_github "$file" -o "temp_wiki/${dir_name}.md"
              fi
            else
              # Normal files keep their name
              target_path="temp_wiki/${base_name}.md"
              pandoc -f html -t markdown_github "$file" -o "$target_path"

              # Fix internal links
              sed -i 's/\.html)/)/g' "$target_path"
              sed -i 's/\.html#/#/g' "$target_path"
            fi
          done

          # Copy any images
          mkdir -p temp_wiki/assets
          if [ -d "site/assets" ]; then
            cp -r site/assets/* temp_wiki/assets/
          fi

      - name: Update Wiki Repository
        run: |
          # Remove old files
          rm -rf wiki/*.md
          mkdir -p wiki/assets

          # Copy new files
          cp temp_wiki/*.md wiki/
          cp -r temp_wiki/assets/* wiki/assets/ 2>/dev/null || true

          # Go to wiki repo
          cd wiki

          # Add all changes
          git add .

          # Commit if there are changes
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update wiki from docs - ${GITHUB_SHA}" && git push)
