"""Base scanner plugin class for the vulnerability scanner."""

import logging
from typing import Any, Dict, List

from sqlalchemy.ext.asyncio import AsyncSession

from sentinelprobe.vulnerability_scanner.models import (
    VulnerabilityCreate,
    VulnerabilityScan,
)

logger = logging.getLogger(__name__)


class ScannerPlugin:
    """Base class for vulnerability scanner plugins."""

    name = "base_scanner"
    description = "Base scanner plugin"

    def __init__(self, session: AsyncSession):
        """Initialize with session.

        Args:
            session: Database session
        """
        self.session = session

    async def scan(
        self,
        scan: VulnerabilityScan,
        target_id: int,
        parameters: Dict[str, Any],
    ) -> List[VulnerabilityCreate]:
        """Perform a vulnerability scan.

        Args:
            scan: The scan configuration
            target_id: Target ID to scan
            parameters: Scan parameters

        Returns:
            List of detected vulnerabilities
        """
        # Base implementation does nothing
        return []
