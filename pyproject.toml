[tool.poetry]
name = "sentinelprobe"
version = "0.1.0"
description = "AI-Powered Penetration Testing System"
authors = ["SentinelProbe Team"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.110.0"
uvicorn = "^0.29.0"
pydantic = "^2.6.4"
sqlalchemy = "^2.0.27"
asyncpg = "^0.29.0"
pymongo = "^4.6.2"
motor = "^3.7.0"
redis = "^5.0.2"
python-dotenv = "^1.0.1"
loguru = "^0.7.2"
tenacity = "^8.2.3"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
pytest-asyncio = "^0.23.4"
pytest-cov = "^4.1.0"
black = "^24.2.0"
isort = "^5.13.2"
flake8 = "^7.0.0"
flake8-docstrings = "^1.7.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
coverage = "^7.4.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true

# Ignore modules with complex type issues that need a separate fix
[[tool.mypy.overrides]]
module = [
  "sentinelprobe.core.migrations",
  "sentinelprobe.orchestration.service",
  "sentinelprobe.orchestration.repository",
  "sentinelprobe.core.redis",
  "sentinelprobe.core.mongodb",
]
ignore_errors = true

# Disable type checking for tests and scripts
[[tool.mypy.overrides]]
module = ["tests.*", "scripts.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
